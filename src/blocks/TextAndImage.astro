---
import { urlFor } from "../utils/image";
import { Image } from "astro:assets";
import Links from "../components/Links.astro";
import { PortableText } from "astro-portabletext";
import { srcSet } from "../utils/image";
import { halfWidthSizes } from "../utils/image";

const { block } = Astro.props;

const imageUrl = block.showImage ? urlFor(block.image).url() : (null ?? "");

const alignImage =
  block.image.imagePosition == "left" ? "lg:flex-row" : "lg:flex-row-reverse";
---

<div
  class=`flex flex-col lg:flex-row gap-6 lg:gap-16 xl:gap-24  ${block.showImage ? alignImage : "" }`
>
  <!-- {
    block.showImage && (
      <div class="w-full lg:w-1/2">
        <Image
          sizes={halfWidthSizes()}
          srcset={srcSet(imageUrl)}
          width={1000}
          height={1000}
          src={imageUrl}
          alt={block.image.alt ?? ""}
          class="aspect-[4/3] object-cover img-rounded"
        />
      </div>
    )
  } -->
  <div class="block-heading w-full lg:w-1/2">
    <span>{block.tagline}</span>
    <h2>{block.title}</h2>
  </div>
  <div class=`w-full lg:w-1/2 spacing-y `>
    <div class="rich-text">
      <PortableText value={block.richText} />
    </div>
    {block.links && <Links data={block.links} />}
  </div>
</div>
